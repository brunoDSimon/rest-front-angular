{"version":3,"sources":["webpack:///src/app/features/login/login-routing.module.ts","webpack:///src/app/features/login/componets/login.component.ts","webpack:///src/app/features/login/componets/login.component.html","webpack:///src/app/features/login/login.module.ts"],"names":["routes","path","component","LoginRoutingModule","forChild","imports","exports","LoginComponent","formBuilder","loginService","userData","router","spinner","console","log","auth","length","userInfo","undefined","navigate","_logado","formGroup","group","email","password","required","show","body","get","value","subscribe","res","setTimeout","hide","setUserInfo","user","setAuth","token","_openError","error","_error","status","messege","login","selector","templateUrl","styleUrls","LoginModule","forRoot","declarations","schemas"],"mappings":"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","file":"features-login-login-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './componets/login.component';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n {path: '', component:LoginComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LoginRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { CustomValidators } from 'ngx-custom-validators';\r\nimport { LoginService } from '../service/login.service';\r\nimport { UsersDataService } from 'src/app/shared/service/UsersData.service';\r\nimport { Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  private _error: any\r\n  private _logado: boolean;\r\n  private _openError: boolean;\r\n  public formGroup: FormGroup\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private loginService: LoginService,\r\n    private userData: UsersDataService,\r\n    private router: Router,\r\n    private spinner: NgxSpinnerService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    console.log(this.userData.auth.length)\r\n    if(this.userData.userInfo[0] != undefined){\r\n      this.router.navigate(['/financeiro']);\r\n      this._logado = true;\r\n    }else{\r\n      this.formGroup = this.formBuilder.group({\r\n        email: ['', CustomValidators.email],\r\n        password: ['', Validators.required]\r\n      })\r\n    }\r\n\r\n  }\r\n  get openError(){\r\n    return this._openError\r\n  }\r\n  get logado(){\r\n    return this._logado;\r\n  }\r\n  get error(){\r\n    return this._error;\r\n  }\r\n  public login(){\r\n    this.spinner.show();\r\n    const body ={\r\n      \"email\":    this.formGroup.get('email').value,\r\n      \"password\": this.formGroup.get('password').value\r\n    }\r\n    this.loginService.auth(body).subscribe((res) =>{\r\n      setTimeout(() => {this.spinner.hide();}, 5000);\r\n      this.userData.setUserInfo(res.user);\r\n      this.userData.setAuth(res.token);\r\n      this._logado = true\r\n      this.router.navigate(['/financeiro']);\r\n      this._openError = false\r\n      // this.spinner.hide();\r\n    },(error) =>{\r\n      this._openError = true\r\n      this._error = error.error.status.messege\r\n      setTimeout(() => {this.spinner.hide();}, 5000);\r\n    })\r\n  }\r\n}\r\n","<div class=\"container center\">\r\n  <div class=\"row\">\r\n    <div class=\"col-xl-4 offset-xl-4 col-lg-4 offset-lg-4 col-md-6 offset-md-3 col-sm-12 col-12\">\r\n      <div class=\"card align-self-center\">\r\n        <div class=\"card-body\">\r\n          <form class=\"form-group\" [formGroup]=\"formGroup\"  (ngSubmit)=\"login()\">\r\n            <label for=\"\">Email</label>\r\n            <input\r\n            type=\"email\"\r\n            class=\"form-control\"\r\n            autocomplete=\"off\"\r\n            formControlName=\"email\"\r\n            >\r\n            <label for=\"\" >Senha</label>\r\n            <input\r\n            type=\"password\"\r\n            class=\"form-control\"\r\n            autocomplete=\"off\"\r\n            formControlName=\"password\"\r\n            >\r\n            <div class=\"text-center mt-3\">\r\n              <button class=\"btn btn-block btn-success\" [disabled]=\"!formGroup.valid\" type=\"submit\">Entrar</button>\r\n            </div>\r\n            <div class=\"alert alert-info mt-2\" role=\"alert\" *ngIf=\"openError\">\r\n              {{error}}\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CustomFormsModule } from 'ngx-custom-validators';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { NgxMaskModule } from 'ngx-mask';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { NgxCurrencyModule } from 'ngx-currency';\r\nimport { PipeModule } from 'src/app/shared/modules/pipe.module';\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\n\r\nimport { LoginComponent } from './componets/login.component';\r\nimport { LoginRoutingModule } from './login-routing.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    PipeModule,\r\n    NgxCurrencyModule,\r\n    LoginRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    NgxMaskModule.forRoot(),\r\n    SharedModule,\r\n    CustomFormsModule,\r\n    NgxSpinnerModule\r\n  ],\r\n  declarations: [\r\n    LoginComponent\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n})\r\nexport class LoginModule { }\r\n"]}